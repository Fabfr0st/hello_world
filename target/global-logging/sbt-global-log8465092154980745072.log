[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Amazon.com Inc. Java 1.8.0_332)
[debug]       Load.loadUnit: plugins took 232.9257ms
[debug]       Load.loadUnit: defsScala took 0.5175ms
[debug] [Loading] Scanning directory C:\Users\fabfr\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\fabfr\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 25.1597 ms
[debug]           Load.resolveProject(global-plugins) took 57.311ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\fabfr\.sbt\1.0\plugins, plugins: List(<none>))) took 125.4577ms
[debug] [Loading] Done in C:\Users\fabfr\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 166.4636ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3406ms
[debug]     Load.loadUnit(file:/C:/Users/fabfr/.sbt/1.0/plugins/, ...) took 413.3228ms
[debug]   Load.apply: load took 655.9607ms
[debug]   Load.apply: resolveProjects took 6.323ms
[debug]   Load.apply: finalTransforms took 57.335ms
[debug]   Load.apply: config.delegates took 8.1622ms
[debug]   Load.apply: Def.make(settings)... took 473.261ms
[debug]   Load.apply: structureIndex took 84.8782ms
[debug]   Load.apply: mkStreams took 2.1401ms
[info] loading global plugins from C:\Users\fabfr\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3736.4372ms
[debug]           Load.loadUnit: plugins took 27.8084ms
[debug]           Load.loadUnit: defsScala took 0.0039ms
[debug] [Loading] Scanning directory C:\Users\fabfr\IdeaProjects\hello-world\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\fabfr\IdeaProjects\hello-world\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.4066 ms
[debug]               Load.resolveProject(hello-world-build) took 1.4579ms
[debug]             Load.loadTransitive: finalizeProject(Project(id hello-world-build, base: C:\Users\fabfr\IdeaProjects\hello-world\project, plugins: List(<none>))) took 4.457ms
[debug] [Loading] Done in C:\Users\fabfr\IdeaProjects\hello-world\project, returning: (hello-world-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 6.6666ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.0126ms
[debug]         Load.loadUnit(file:/C:/Users/fabfr/IdeaProjects/hello-world/project/, ...) took 35.5832ms
[debug]       Load.apply: load took 37.3189ms
[debug]       Load.apply: resolveProjects took 0.1025ms
[debug]       Load.apply: finalTransforms took 7.5529ms
[debug]       Load.apply: config.delegates took 0.3953ms
[debug]       Load.apply: Def.make(settings)... took 73.6596ms
[debug]       Load.apply: structureIndex took 21.5704ms
[debug]       Load.apply: mkStreams took 0.0042ms
[info] loading project definition from C:\Users\fabfr\IdeaProjects\hello-world\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 4175.0654ms
[debug]     Load.loadUnit: defsScala took 0.0037ms
[debug] [Loading] Scanning directory C:\Users\fabfr\IdeaProjects\hello-world
[debug]       Load.loadUnit: mkEval took 10.956ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.5826 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 2.8877ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\fabfr\IdeaProjects\hello-world, plugins: List(<none>))) took 5.4707ms
[debug] [Loading] Done in C:\Users\fabfr\IdeaProjects\hello-world, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 2423.954ms
[debug]     Load.loadUnit: cleanEvalClasses took 5.5021ms
[debug]   Load.loadUnit(file:/C:/Users/fabfr/IdeaProjects/hello-world/, ...) took 6605.39ms
[debug] Load.apply: load took 6607.0649ms
[debug] Load.apply: resolveProjects took 0.1172ms
[debug] Load.apply: finalTransforms took 7.4461ms
[debug] Load.apply: config.delegates took 0.3339ms
[debug] Load.apply: Def.make(settings)... took 53.7464ms
[debug] Load.apply: structureIndex took 22.388ms
[debug] Load.apply: mkStreams took 0.0035ms
[info] set current project to hello-world (in build file:/C:/Users/fabfr/IdeaProjects/hello-world/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:sbt-server-078de3db5bb4ffd893a5
[debug] Writing bsp connection file
[info] started sbt server
